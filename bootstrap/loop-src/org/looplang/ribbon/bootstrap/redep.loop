module ribbon.redep

require console as console
require file as f
require `org.yaml.snakeyaml.Yaml`
require loop.Util
require org.looplang.ribbon.bootstrap.Bootstrap
require org.mvel2.templates.TemplateRuntime

# rebuild project classpath from yaml

quit(msg) ->
  def= 'Usage: ribbon redep \n'
  if msg == Nothing then print(def) else print(msg)
  exit(1)

validate(args) ->
  yaml_exists = new java.io.File('ribbon.yml').exists()
  if yaml_exists then Nothing else quit('not a valid ribbon project (have you run ribbon init?) \n')

dont_proceed() ->
  classpath = f.file('._classpath')
  yaml = f.file('ribbon.yml')
  classpath.exists() and (classpath.lastModified() >= yaml.lastModified())

redep() ->
  yaml = new Yaml()
  config = yaml.load(f.read('ribbon.yml'))
  template_pom = Util::toString(Bootstrap.getResourceAsStream('template_pom.xml'))
  console.write('  analyze dependency tree')
  f.write('tmp_pom.xml', TemplateRuntime::eval(template_pom, config))
  Bootstrap::buildClasspath('tmp_pom.xml', '._classpath')
  print("  cleanup temporary files")
  new java.io.File('tmp_pom.xml').delete()


main(args) ->
  validate(args)
  print("  rebuild project classpath")
  if dont_proceed() then quit('  already up-to-date') else redep()
